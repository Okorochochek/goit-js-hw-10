{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst btnStart = document.querySelector(\"[data-start]\");\nconst inputDate = document.querySelector(\"#datetime-picker\");\n\nbtnStart.disabled = true;\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const pickedDate = selectedDates[0];\n   if (pickedDate <= new Date()) {\n      iziToast.error(\n        { title: \"Error\", \n        message: \"Please choose a date in the future\", \n        position: \"topRight\", \n        color:\"#fff\", \n        backgroundColor:\"#EF4040\"});\n        btnStart.disabled = true;\n    } else {\n      userSelectedDate = pickedDate;\n      btnStart.disabled = false;\n    }\n},\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nlet timerId = null;\n\nbtnStart.addEventListener(\"click\", () => {\n  btnStart.disabled = true;\n  inputDate.disabled = true;\n\n  timerId = setInterval(() => {\n    const diff = userSelectedDate - new Date();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      inputDate.disabled = false;\n      return;\n    }\n\n    const time = convertMs(diff);\n    updateTimerUI(time);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  document.querySelector(\"[data-days]\").textContent = days;\n  document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n  document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n  document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n}\n\n"],"names":["btnStart","inputDate","userSelectedDate","options","selectedDates","pickedDate","iziToast","flatpickr","timerId","diff","updateTimerUI","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"+IAMA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EAE3DD,EAAS,SAAW,GACpB,IAAIE,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAaD,EAAc,CAAC,EAC/BC,GAAc,IAAI,MACnBC,EAAS,MACP,CAAE,MAAO,QACT,QAAS,qCACT,SAAU,WACV,MAAM,OACN,gBAAgB,SAAS,CAAC,EAC1BN,EAAS,SAAW,KAEtBE,EAAmBG,EACnBL,EAAS,SAAW,GAE1B,CACA,EAEAO,EAAU,mBAAoBJ,CAAO,EAErC,IAAIK,EAAU,KAEdR,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBO,EAAU,YAAY,IAAM,CAC1B,MAAMC,EAAOP,EAAmB,IAAI,KAEpC,GAAIO,GAAQ,EAAG,CACb,cAAcD,CAAO,EACrBE,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,EAAG,EAC3DT,EAAU,SAAW,GACrB,MACF,CAEA,MAAMU,EAAOC,EAAUH,CAAI,EAC3BC,EAAcC,CAAI,CACpB,EAAG,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAc,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxD,SAAS,cAAc,aAAa,EAAE,YAAcH,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcE,EAAeD,CAAO,CAC/E"}